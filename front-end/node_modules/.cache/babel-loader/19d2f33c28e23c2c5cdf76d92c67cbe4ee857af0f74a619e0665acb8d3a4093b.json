{"ast":null,"code":"var _jsxFileName = \"/home/albert/Documents/ST/front-end/src/composants/notification.jsx\",\n  _s = $RefreshSig$();\nimport '../styles/notification.css';\nimport Popup from 'reactjs-popup';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notification = ({\n  count = 0,\n  notifications = []\n}) => {\n  _s();\n  const [showPanel, setShowPanel] = useState(false);\n  const togglePanel = () => setShowPanel(!showPanel);\n  const notificationList = notifications.map(notification => /*#__PURE__*/_jsxDEV(Popup, {\n    trigger: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: notification.isRead ? 'read' : 'unread',\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: notification.avatar,\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: notification.sender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), \" \", notification.message, /*#__PURE__*/_jsxDEV(\"a\", {\n        href: notification.link,\n        children: notification.linkText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unread-indicator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)]\n    }, notification.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 22\n    }, this),\n    children: close => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"notification.sender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: close,\n        children: \" accepter \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onclick: close,\n        children: \" refuser \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"btn\",\n      checked: showPanel,\n      onChange: togglePanel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"uro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"btn\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"counter\",\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${showPanel ? 'panel' : 'activ'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unread-only\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Only show unread\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"uro\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notificationList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Notification, \"PADIOYA77d+qMZzeQqnvkdHEyEU=\");\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["Popup","React","useState","jsxDEV","_jsxDEV","Notification","count","notifications","_s","showPanel","setShowPanel","togglePanel","notificationList","map","notification","trigger","className","isRead","children","src","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","sender","message","href","link","linkText","id","close","onClick","onclick","type","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["/home/albert/Documents/ST/front-end/src/composants/notification.jsx"],"sourcesContent":["import '../styles/notification.css'\nimport Popup from 'reactjs-popup';\n\nimport React, { useState } from 'react';\n\nconst Notification = ({ count = 0, notifications = [] }) => {\n  const [showPanel, setShowPanel] = useState(false);\n\n  const togglePanel = () => setShowPanel(!showPanel);\n\n  const notificationList = notifications.map((notification) => (\n    <Popup trigger={ <li key={notification.id} className={notification.isRead ? 'read' : 'unread'}>\n      <img src={notification.avatar} alt=\"Avatar\" />\n      <strong>{notification.sender}</strong> {notification.message}\n      <a href={notification.link}>{notification.linkText}</a>\n      <span className=\"unread-indicator\"></span>\n    </li>} >{close => ( \n      <div>\n        <h1>notification.sender</h1>\n\n        <button onClick={close}> accepter </button>\n        <button onclick={close}> refuser </button>\n      </div>\n    )}\n\n    \n\n    </Popup>\n  ));\n\n  return (\n    <div className=\"notification\">\n      <input type=\"checkbox\" id=\"btn\" checked={showPanel} onChange={togglePanel} />\n      <input type=\"checkbox\" id=\"uro\" />\n      <label htmlFor=\"btn\">\n        <span className=\"counter\">{count}</span>\n      </label>\n      <div className={`${showPanel ? 'panel' :'activ'}`}>\n        <div className=\"unread-only\">\n          <span>Only show unread</span>\n          <label htmlFor=\"uro\">\n            <span className=\"circle\"></span>\n          </label>\n        </div>\n        <ul>{notificationList}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Notification;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}