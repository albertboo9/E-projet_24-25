{"ast":null,"code":"import { getDecadeStart, getDecadeEnd, getYearStart, getYearEnd, getMonthStart, getMonthEnd, getDayStart, getDayEnd } from '@wojtekmaj/date-utils';\n/**\n * Returns the beginning of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nexport function getBegin(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return getDecadeStart(date);\n    case 'year':\n      return getYearStart(date);\n    case 'month':\n      return getMonthStart(date);\n    case 'day':\n      return getDayStart(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n/**\n * Returns the end of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nexport function getEnd(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return getDecadeEnd(date);\n    case 'year':\n      return getYearEnd(date);\n    case 'month':\n      return getMonthEnd(date);\n    case 'day':\n      return getDayEnd(date);\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}","map":{"version":3,"names":["getDecadeStart","getDecadeEnd","getYearStart","getYearEnd","getMonthStart","getMonthEnd","getDayStart","getDayEnd","getBegin","rangeType","date","Error","concat","getEnd"],"sources":["/home/albert/Documents/ST/front-end/node_modules/react-date-picker/dist/esm/shared/dates.js"],"sourcesContent":["import { getDecadeStart, getDecadeEnd, getYearStart, getYearEnd, getMonthStart, getMonthEnd, getDayStart, getDayEnd, } from '@wojtekmaj/date-utils';\n/**\n * Returns the beginning of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nexport function getBegin(rangeType, date) {\n    switch (rangeType) {\n        case 'decade':\n            return getDecadeStart(date);\n        case 'year':\n            return getYearStart(date);\n        case 'month':\n            return getMonthStart(date);\n        case 'day':\n            return getDayStart(date);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\n/**\n * Returns the end of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nexport function getEnd(rangeType, date) {\n    switch (rangeType) {\n        case 'decade':\n            return getDecadeEnd(date);\n        case 'year':\n            return getYearEnd(date);\n        case 'month':\n            return getMonthEnd(date);\n        case 'day':\n            return getDayEnd(date);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,YAAY,EAAEC,YAAY,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAS,uBAAuB;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,SAAS,EAAEC,IAAI,EAAE;EACtC,QAAQD,SAAS;IACb,KAAK,QAAQ;MACT,OAAOT,cAAc,CAACU,IAAI,CAAC;IAC/B,KAAK,MAAM;MACP,OAAOR,YAAY,CAACQ,IAAI,CAAC;IAC7B,KAAK,OAAO;MACR,OAAON,aAAa,CAACM,IAAI,CAAC;IAC9B,KAAK,KAAK;MACN,OAAOJ,WAAW,CAACI,IAAI,CAAC;IAC5B;MACI,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAACC,MAAM,CAACH,SAAS,CAAC,CAAC;EAChE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,MAAMA,CAACJ,SAAS,EAAEC,IAAI,EAAE;EACpC,QAAQD,SAAS;IACb,KAAK,QAAQ;MACT,OAAOR,YAAY,CAACS,IAAI,CAAC;IAC7B,KAAK,MAAM;MACP,OAAOP,UAAU,CAACO,IAAI,CAAC;IAC3B,KAAK,OAAO;MACR,OAAOL,WAAW,CAACK,IAAI,CAAC;IAC5B,KAAK,KAAK;MACN,OAAOH,SAAS,CAACG,IAAI,CAAC;IAC1B;MACI,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAACC,MAAM,CAACH,SAAS,CAAC,CAAC;EAChE;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}